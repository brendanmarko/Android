May 1
=====
Today was a pretty relaxed day wrt to coding, just changed around some of the movement stuff that will need a bit of fine tuning.
Probably working about 75% the way I would like, likely finish it up tomorrow.
Organized the 'Log Files' into a better folder system better for archiving.

Completed
=========
1. Fixed the bound check function to stop jittery movements and made some adjustments to the Player movement and how it calculates the direction

To do
=====
1. Refine the movement system wrt the angle a bit more!

May 5
=====
Well, it feels good to write about what I got done after looking back to May 1st!
Player movement is way less clunky now and the GameView/ViewPort and ControllerFragment all came together nice.

	Completed
	=========
	1. Changed player movement to 8 cardianl directions instead of using the angle for anything other than finding the appropriate direction
	  ie) N, NE, NW, S, SE, SW, W, E
	2. Added the ControllerFragment back and scaling the playable screen to use a fraction of the screen.
	   The problem before has been the GameView was being drawn to full size and the ControllerFragment on top, cutting off part of the GameView
	3. ControllerFragment is back within GameActivity


To-do [Critical]
=====
1. There is an issue with touching the screen beyond the initial max_bounds, I think I need to be adding a displacement value or something similar.

To-do [Secondary]
=====
1. Get Projectiles working again for the Player
2. Get Collisions/Hitboxes to register again


May 6
=====
Did a bit today regarding Projectiles, good news is that the displacement value change fixed any problems I had for the screen touches!

Completed
==========
1. Screen Touching to move Character works 100%
2. Projectiles add to list but do NOT display

To-do
=====
1. Get Projectiles to display

May 7
=====
I would be a liar if I said today was not a lot of work to get Projectiles to show up on the Canvas.
As I was working through the GameView I thought to myself, why would GameView be responsible to manage everything?
I approached the Projectiles in a different way and created a ProjectileManager class that will handle all projectiles.
This way GameView will only have to manage the ProjectileManager instead of all Projectiles!
If this works well I will add it for Entity management as well later!

Completed 
==========
1. Added ProjectileManager class to handle Projectiles
2. Completely changed the Projectile class, will look at consilidating classes later wrt Entity
3. Projectiles now show up on the GameView Canvas!

To-do
=====
1. Get Projectiles to move and be removed once they go out of bounds
