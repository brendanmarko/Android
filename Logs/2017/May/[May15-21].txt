May 16
======
I had known for awhile that my Projectile class and Entity/MovableEntity needed some tidying up and decided to polish off the classes before proceeding.
It's a good thing that I did, simplifying the inheritance made for an easy way to create projectiles. I will have to do some work on MovableEntity with
some sort of field for movement types later before I can look at changing the way some projectiles react with entities.

Completed
=========
1. Consolidated Projectile to use inheritance from Entity
2. Tided up Entity/MovableEntity
3. Changed all CTORs to have same pattern of variables

To do
=====
1. Add movement type field to Objects
2. Handle the new MT in GameView

May 17
======
In the spirit of reorganzing the code a bit before moving on, I alleviated a lot of the work done within GameView and assigned it to separate Manager
classes that I created. I also added the movement type and the check for it within GameView that I wanted to accomplish yesterday!

Completed
=========
1. Added HitboxManager and EntityManager as helper classes for GameView
2. MovementType added to GameObjects, handled in MovableEntity

To do
=====
1. Projectile interaction with Entities
2. Projectile interaction with max bounds

May 18
======
When I was reviewing my code for the Manager classes (Entity, Prj, Level) I noticed there was a lot of repeated code and thought that creating
an inheritance structure for this would do wonders for simplicity!
I wrote everything up for it and will test to make sure everything works smoothly when I get home!

Completed
=========
1. Added Manager class
2. Extended all *Manager classes to utilize their new super class

To do
=====
1. Projectile reqs from other day!

May 21
======
Today while working on determining the direction that a MovableEntity is facing, which is important for which direction projectiles will be sent from an
object that has the capacity to shoot, I saw a lot of code from the Player class could be repurposed and used within the MovableEntity class. After moving
some functions around, I am able to determine the direction that an entity is facing now, which will give me the ability to direct projectiles to move in the
specified direction.

Completed
=========
1. Consolidated Player class functions into MovableEntity
2. Added some helpers to Player
3. The calcDisplacement function now uses a String as a paramater instead of float, since MovableEntities will not have to calculate angles as the Player does

To do
=====
1. Shoot Projectile in desired direction
2. Projectile interaction with Entities/Bounds
