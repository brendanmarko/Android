May 8
=====
I did not really do too much today since I put in a lot of time yesterday and needed a little break!

Completed
=========
1. Projectiles safely delete from ProjectileManager during gameplay
2. Projectiles are deleted when the max_bounds are exceeded, but behavior will be changed wrt Projectile

To-do:
======
1. CollisionMgr needs to be created and properly handle collisions wrt Entities, Projectiles and max_bounds

May 9
=====
Began work today on CollisionManager and laid down the framework for some functions!

Completed
=========
1. Created CollisionMgr class with some basic functions
2. Added back Hitbox framework back
3. RectangleHitbox has been rebuilt and still needs some work

To-do
=====
0. Ensure RectangleHitbox displays properly for each Entity in the Game World wrt ViewPort
1. Test and complete Hitbox detection
2. Implement Collisions of Entities
3. Implement Collisions of Entities/Projectiles

May 10
======
Began work on fine tuning the RectangleHitbox class today, some problems still exists though with Projectiles not showing up.

May 11
======
Finished drawing the Hitboxes for all Projectiles that are created by the Player so far! Removal from projectiles collection works and no problems removing it from the list.

Completed
=========
1. Hitboxes drawing for Projectiles
2. Hitbox position updates as objects move across screen using the displacement values
3. Changed the colors of boxes to help differentiate

To-do
=====
1. Test and complete Hitbox detection
2. Apply detection to the various collections in GameView

May 13
======
Over the last couple days I noticed that some of the Entities were returning the wrong value for an 'isVisible()' call. After closer exmaniation I found that the problem was 
actually coming from clipObject, where some of the values were not being calculated properly! Once this was fixed and with some other adjustments I was able to get the
detection working for collisions between Entity/Entity and Projectile/Entity!

Completed
=========
1. Fixed ViewPort clipObject() to properly calculate results
2. Completed hit detection so that hits between Entity/Entity register
3. Completed hit detection so that hits between Entity/Prjs register

To-do
=====
1. Handling collisions between Entities
2. Handling collisions between Projectiles/Entities
